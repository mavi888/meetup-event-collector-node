# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    v1.docs.serverless.com
#
# Happy Coding!

service: meetup-event-collector # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/groups-table-3*"]]

# you can overwrite defaults here
#defaults:
#  stage: dev
#  region: us-east-1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  getCalendar:
    handler: handler.getMeetupEventsCalendar
    events:
    - http:
        path: meetupevents/calendar/{id}
        method: get
        private: true
  setGroupId:
    handler: handler.setGroupId
    events:
    - http:
        path: meetupevents/groupId/{groupId}
        method: put
        private: true
#     - s3: ${bucket}
#     - schedule: rate(10 minutes)
#     - sns: greeter-topic

# you can add CloudFormation resource templates here
#resources:
resources:
  Resources:
    GroupsIdTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "groupid"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "groupid"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "groups-table-3"
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
